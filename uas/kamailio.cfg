#!KAMAILIO

loadmodule "pv"
loadmodule "xlog"
loadmodule "sl"
loadmodule "textops"
loadmodule "cfgutils"

modparam("sl", "bind_tm", 0)

disable_sctp = yes
force_rport  = yes

request_route {
    if ( is_method("ACK") ) {
        exit;
    }

    xcrit("$$ru: [$ru]. Recieve socket [$Rut]\n");

    sl_send_reply("404","Not Found");
    exit;

    route("s.len");
    route("s.md5");
    route("s.sha256");
    route("s.sha384");
    route("s.sha512");
    route("s.substr,offset,length");
    route("s.select,index,separator");
    route("s.encode.7bit");
    route("s.decode.7bit");
    ## TODO: Other encodings:
    #route("s.encode.hexa");
    #route("s.decode.hexa");
    #route("s.encode.base58");
    #route("s.decode.base58")
    route("s.encode.base64");
    route("s.decode.base64");
    #route("s.encode.base64t");
    route("s.decode.base64t");
    ##
    route("s.corehash,n");

    route("uri");


    send_reply("403", "Not Allowed");
}


route["s.len"]{
    xnotice("## {s.len} is the number of BYTES in a string:\n");

    $var(x) = "ðŸ¤£";
    xinfo("    $$(var(x){s.len}) of '$var(x)' is [$(var(x){s.len})]\n");

    $var(x) = "abc";
    xinfo("    $$(var(x){s.len}) of '$var(x)' is [$(var(x){s.len})]\n");

    xinfo("\n");
}


route["s.md5"] {
    $var(x) = "abc";
    xnotice("## {s.md5} md5 hash of string\n");
    xinfo("    $$(var(x){s.md5}) of '$var(x)' is [$(var(x){s.md5})]\n");

    xinfo("\n");
}


route["s.sha256"] {
    $var(x) = "abc";
    xnotice("## {s.sha256} sha256 hash of string\n");
    xinfo("    $$(var(x){s.sha256}) of '$var(x)' is [$(var(x){s.sha256})]\n");

    xinfo("\n");
}


route["s.sha384"] {
    $var(x) = "abc";
    xnotice("## {s.sha384} sha384 hash of string\n");
    xinfo("    $$(var(x){s.sha384}) of '$var(x)' is [$(var(x){s.sha384})]\n");

    xinfo("\n");
}


route["s.sha512"] {
    $var(x) = "abc";
    xnotice("## {s.sha512} sha512 hash of string\n");
    xinfo("    $$(var(x){s.sha512}) of '$var(x)' is [$(var(x){s.sha512})]\n");

    xinfo("\n");
}


route["s.substr,offset,length"]{
    $var(x) = "abcd";
    xnotice("## {s.substr,offset,length} Substring, offset, and number of... bytes?\n");
    xinfo("    $$(var(x){s.substr,1,0}) of '$var(x)' is [$(var(x){s.substr,1,0})]\n");

    $var(x) = "ðŸ¤£";
    xinfo("    $$(var(x){s.substr,1,0}) of '$var(x)' is [$(var(x){s.substr,1,0})]\n");

    xinfo("\n");
}


route["s.select,index,separator"] {
    xnotice("## {s.select,index,separator} Return a field from PV value\n");
    $var(x) = "12,34,56,78,90";
    xinfo("    $$(var(x){s.select,1,,}) of '$var(x)' is [$(var(x){s.select,1,,})]\n");
    xinfo("    $$(var(x){s.select,-2,,}) of '$var(x)' is [$(var(x){s.select,-2,,})]\n");

    xinfo("With alternate separator:\n");
    $var(x) = "12;34;56;78;90";
    xinfo("    $$(var(x){s.select,1,;}) of '$var(x)' is [$(var(x){s.select,1,;})]\n");
    xinfo("    $$(var(x){s.select,-2,;}) of '$var(x)' is [$(var(x){s.select,-2,;})]\n");

    xinfo("\n");
}


route["s.encode.7bit"] {
    xnotice("## {s.encode.7bit} Return encoding in 7Bit of PV value\n");
    $var(x) = "12,34,56,78,90";

    xinfo("    $$(var(x){s.encode.7bit}) of '$var(x)' is [$(var(x){s.encode.7bit})]\n");

    xinfo("\n");
}


route["s.decode.7bit"] {
    xnotice("## {s.decode.7bit} Return decoding of PV value in 7Bit\n");
    $var(x) = "31196B4663D56CAC1B8E958301";

    xinfo("    $$(var(x){s.decode.7bit}) of '$var(x)' is [$(var(x){s.decode.7bit})]\n");

    xinfo("\n");
}


route["s.encode.base64"]{
    xnotice("## {s.encode.base64} Return base64 encoding of PV value.  Can "
            "include trainling '=' characters\n");

    $var(x) = "abcd";
    xinfo("    $$(var(x){s.encode.base64}) of '$var(x)' is [$(var(x){s.encode.base64})]\n");

    $var(x) = "abcde";
    xinfo("    $$(var(x){s.encode.base64}) of '$var(x)' is [$(var(x){s.encode.base64})]\n");

    $var(x) = "abcdef";
    xinfo("    $$(var(x){s.encode.base64}) of '$var(x)' is [$(var(x){s.encode.base64})]\n");

    xinfo("\n");
}


route["s.decode.base64"]{
    xnotice("## {s.decode.base64} Return base64 decoding of PV value.  Can "
            "include trainling '=' characters\n");

    $var(x) = "YWJjZA==";
    xinfo("    $$(var(x){s.decode.base64}) of '$var(x)' is [$(var(x){s.decode.base64})]\n");

    $var(x) = "YWJjZGVm";
    xinfo("    $$(var(x){s.decode.base64}) of '$var(x)' is [$(var(x){s.decode.base64})]\n");

    $var(x) = "YWJjZA";
    xwarn("    This fails because '$var(x)' is invalid base 64 without "
          "trailing '=' characters:\n");
    xinfo("    $$(var(x){s.decode.base64}) of '$var(x)' is [$(var(x){s.decode.base64})]\n");

    xinfo("\n");
}


route["s.decode.base64t"]{
    xnotice("## {s.decode.base64t} Decode base64 encoded PV, handling missing "
            "trailing padding characters, and return value.\n");
    xnotice("    Note that this will work with or without trailing '=' "
            "characters\n");

    $var(x) = "YWJjZA";
    xinfo("    $$(var(x){s.decode.base64t}) of '$var(x)' is [$(var(x){s.decode.base64t})]\n");

    $var(x) = "YWJjZA==";
    xinfo("    $$(var(x){s.decode.base64t}) of '$var(x)' is [$(var(x){s.decode.base64t})]\n");

    xinfo("\n");
}


route["s.corehash,n"]{
    xnotice("## {s.corehash,n} Return the hash id computed with Kamailio's "
            "core hashing function.\n");

    $var(x) = "12125551001";
    xinfo("    $$(var(x){s.corehash}) of '$var(x)' is [$(var(x){s.corehash})]\n");

    xinfo("    $$(var(x){s.corehash,2}) of '$var(x)' is [$(var(x){s.corehash,2})]\n");
    $var(hash) = core_hash("$var(x)", "", 65535);
    xinfo("    core_hash(\"$var(x)\", \"\", 65535) is [$var(hash)]\n");
    $var(hash) = core_hash("$var(x)", "", 65536);
    xinfo("    core_hash(\"$var(x)\", \"\", 65536) is [$var(hash)]\n");

    $var(x) = "12125551002";
    xinfo("    $$(var(x){s.corehash}) of '$var(x)' is [$(var(x){s.corehash})]\n");
    xinfo("    $$(var(x){s.corehash,2}) of '$var(x)' is [$(var(x){s.corehash,2})]\n");

    $var(x) = "## {s.corehash,n} Return the hash id computed with Kamailio's core hashing function.";
    xinfo("    $$(var(x){s.corehash}) of '$var(x)' is [$(var(x){s.corehash})]\n");
    xinfo("    $$(var(x){s.corehash,12}) of '$var(x)' is [$(var(x){s.corehash,12})]\n");

    xinfo("\n");
}


route["uri"] {
    $var(uri) = "sip:ben;verstat=TN-Validation-Passed:s33Rekt@domain.com:5060;foo=bar;baz=biz;ttl=60;transport=udp";
    xnotice("## Various {uri.*} tansformations. Test URI is: $var(uri)\n");

    xinfo("    {uri.scheme}:   [$(var(uri){uri.scheme})]\n");
    xinfo("    {uri.user}:     [$(var(uri){uri.user})]\n");
    xinfo("    {uri.host}:     [$(var(uri){uri.host})]\n");
    xinfo("    {uri.passwd}:   [$(var(uri){uri.passwd})]\n");
    xinfo("    {uri.port}:     [$(var(uri){uri.port})]\n");
    xinfo("    {uri.params}:   [$(var(uri){uri.params})]\n");
    xinfo("    {uri.headers}:  [$(var(uri){uri.headers})]\n");
    xinfo("    {uri.ttl}:      [$(var(uri){uri.ttl})]\n");
    xinfo("    {uri.tosocket}: [$(var(uri){uri.tosocket})]\n");
    xinfo("    {uri.duri}:     [$(var(uri){uri.duri})]\n");
    xinfo("    {uri.saor}:     [$(var(uri){uri.saor})]\n");
    xinfo("    {uri.suri}:     [$(var(uri){uri.suri})]\n");
}









